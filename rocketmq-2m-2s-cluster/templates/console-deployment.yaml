{{- if .Values.rocketmqConsole.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  name: {{ .Values.rocketmqConsole.name }}
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: {{ .Values.rocketmqConsole.progressDeadlineSeconds }}
  replicas: {{ .Values.rocketmqConsole.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: rocketmq-console
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rocketmq-console
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Drocketmq.namesrv.addr={{ .Values.rocketmqBrokerA.nameServerAddr }}
            -Dcom.rocketmq.sendMessageWithVIPChannel=false
        image: {{ .Values.rocketmqConsole.imageName }}:{{ .Values.rocketmqConsole.imageTag }}
        imagePullPolicy: IfNotPresent
        name: {{ .Values.rocketmqConsole.name }}
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
{{- with .Values.rocketmqConsole.resources }}
{{ toYaml . | indent 10 }}
{{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: {{ .Values.rocketmqConsole.terminationGracePeriodSeconds }}
{{- end }}

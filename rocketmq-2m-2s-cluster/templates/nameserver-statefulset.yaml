---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
  labels:
#   app.kubernetes.io/instance: {{ .Values.rocketmqNameserver.name }}
    app.kubernetes.io/name: {{ .Values.rocketmqNameserver.name }}
  name: {{ .Values.rocketmqNameserver.name }}
  namespace: {{ .Release.Namespace }}
spec:
  podManagementPolicy: OrderedReady
  replicas: {{ .Values.rocketmqNameserver.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: rocketmq-name-server
      name_service_cr: rocketmq-name-server
  serviceName: {{ .Values.rocketmqNameserver.name }}-headless
  template:
    metadata:
      labels:
        app: rocketmq-name-server
        name_service_cr: rocketmq-name-server
    spec:
      containers:
      - image: {{ .Values.rocketmqNameserver.imageName }}:{{ .Values.rocketmqNameserver.imageTag }}
        imagePullPolicy: {{ .Values.rocketmqNameserver.imagePullPolicy }}
        name: {{ .Values.rocketmqNameserver.name }}
        ports:
        - containerPort: 9876
          name: main
          protocol: TCP
        resources:
{{- with .Values.rocketmqNameserver.resources }}
{{ toYaml . | indent 10 }}
{{- end }}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /root/logs
          name: name-srver-storage
          subPath: logs
      dnsPolicy: {{ .Values.rocketmqNameserver.dnsPolicy }}
      restartPolicy: {{ .Values.rocketmqNameserver.restartPolicy }}
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: {{ .Values.rocketmqNameserver.terminationGracePeriodSeconds }}
      volumes:
      - emptyDir: {}
        name: name-srver-storage
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate